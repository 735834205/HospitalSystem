<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.InpatientMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Inpatient">
    <id column="hospitalizationId" jdbcType="INTEGER" property="hospitalizationid" />
    <result column="patientId" jdbcType="INTEGER" property="patientid" />
    <result column="admissionDepartment" jdbcType="INTEGER" property="admissiondepartment" />
    <result column="hospitalizationTime" jdbcType="VARCHAR" property="hospitalizationtime" />
    <result column="bedNumber" jdbcType="INTEGER" property="bednumber" />
    <result column="situation" jdbcType="VARCHAR" property="situation" />
    <result column="transferSituation" jdbcType="INTEGER" property="transfersituation" />
    <result column="dischargeTime" jdbcType="VARCHAR" property="dischargetime" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hospitalizationId, patientId, admissionDepartment, hospitalizationTime, bedNumber, 
    situation, transferSituation, dischargeTime, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.InpatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inpatient
    where hospitalizationId = #{hospitalizationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inpatient
    where hospitalizationId = #{hospitalizationid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.InpatientExample">
    delete from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Inpatient">
    insert into inpatient (hospitalizationId, patientId, admissionDepartment, 
      hospitalizationTime, bedNumber, situation, 
      transferSituation, dischargeTime, isDelete
      )
    values (#{hospitalizationid,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER}, #{admissiondepartment,jdbcType=INTEGER}, 
      #{hospitalizationtime,jdbcType=VARCHAR}, #{bednumber,jdbcType=INTEGER}, #{situation,jdbcType=VARCHAR}, 
      #{transfersituation,jdbcType=INTEGER}, #{dischargetime,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Inpatient">
    insert into inpatient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hospitalizationid != null">
        hospitalizationId,
      </if>
      <if test="patientid != null">
        patientId,
      </if>
      <if test="admissiondepartment != null">
        admissionDepartment,
      </if>
      <if test="hospitalizationtime != null">
        hospitalizationTime,
      </if>
      <if test="bednumber != null">
        bedNumber,
      </if>
      <if test="situation != null">
        situation,
      </if>
      <if test="transfersituation != null">
        transferSituation,
      </if>
      <if test="dischargetime != null">
        dischargeTime,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hospitalizationid != null">
        #{hospitalizationid,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        #{patientid,jdbcType=INTEGER},
      </if>
      <if test="admissiondepartment != null">
        #{admissiondepartment,jdbcType=INTEGER},
      </if>
      <if test="hospitalizationtime != null">
        #{hospitalizationtime,jdbcType=VARCHAR},
      </if>
      <if test="bednumber != null">
        #{bednumber,jdbcType=INTEGER},
      </if>
      <if test="situation != null">
        #{situation,jdbcType=VARCHAR},
      </if>
      <if test="transfersituation != null">
        #{transfersituation,jdbcType=INTEGER},
      </if>
      <if test="dischargetime != null">
        #{dischargetime,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.InpatientExample" resultType="java.lang.Long">
    select count(*) from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inpatient
    <set>
      <if test="record.hospitalizationid != null">
        hospitalizationId = #{record.hospitalizationid,jdbcType=INTEGER},
      </if>
      <if test="record.patientid != null">
        patientId = #{record.patientid,jdbcType=INTEGER},
      </if>
      <if test="record.admissiondepartment != null">
        admissionDepartment = #{record.admissiondepartment,jdbcType=INTEGER},
      </if>
      <if test="record.hospitalizationtime != null">
        hospitalizationTime = #{record.hospitalizationtime,jdbcType=VARCHAR},
      </if>
      <if test="record.bednumber != null">
        bedNumber = #{record.bednumber,jdbcType=INTEGER},
      </if>
      <if test="record.situation != null">
        situation = #{record.situation,jdbcType=VARCHAR},
      </if>
      <if test="record.transfersituation != null">
        transferSituation = #{record.transfersituation,jdbcType=INTEGER},
      </if>
      <if test="record.dischargetime != null">
        dischargeTime = #{record.dischargetime,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null">
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inpatient
    set hospitalizationId = #{record.hospitalizationid,jdbcType=INTEGER},
      patientId = #{record.patientid,jdbcType=INTEGER},
      admissionDepartment = #{record.admissiondepartment,jdbcType=INTEGER},
      hospitalizationTime = #{record.hospitalizationtime,jdbcType=VARCHAR},
      bedNumber = #{record.bednumber,jdbcType=INTEGER},
      situation = #{record.situation,jdbcType=VARCHAR},
      transferSituation = #{record.transfersituation,jdbcType=INTEGER},
      dischargeTime = #{record.dischargetime,jdbcType=VARCHAR},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Inpatient">
    update inpatient
    <set>
      <if test="patientid != null">
        patientId = #{patientid,jdbcType=INTEGER},
      </if>
      <if test="admissiondepartment != null">
        admissionDepartment = #{admissiondepartment,jdbcType=INTEGER},
      </if>
      <if test="hospitalizationtime != null">
        hospitalizationTime = #{hospitalizationtime,jdbcType=VARCHAR},
      </if>
      <if test="bednumber != null">
        bedNumber = #{bednumber,jdbcType=INTEGER},
      </if>
      <if test="situation != null">
        situation = #{situation,jdbcType=VARCHAR},
      </if>
      <if test="transfersituation != null">
        transferSituation = #{transfersituation,jdbcType=INTEGER},
      </if>
      <if test="dischargetime != null">
        dischargeTime = #{dischargetime,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where hospitalizationId = #{hospitalizationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Inpatient">
    update inpatient
    set patientId = #{patientid,jdbcType=INTEGER},
      admissionDepartment = #{admissiondepartment,jdbcType=INTEGER},
      hospitalizationTime = #{hospitalizationtime,jdbcType=VARCHAR},
      bedNumber = #{bednumber,jdbcType=INTEGER},
      situation = #{situation,jdbcType=VARCHAR},
      transferSituation = #{transfersituation,jdbcType=INTEGER},
      dischargeTime = #{dischargetime,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where hospitalizationId = #{hospitalizationid,jdbcType=INTEGER}
  </update>
</mapper>