<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.dao.HospitalizationcheckMapper">
  <resultMap id="BaseResultMap" type="com.web.entity.Hospitalizationcheck">
    <id column="hospitalizationCheckNo" jdbcType="INTEGER" property="hospitalizationcheckno" />
    <result column="hospitalizationAdviceId" jdbcType="INTEGER" property="hospitalizationadviceid" />
    <result column="inspectionDoctorId" jdbcType="INTEGER" property="inspectiondoctorid" />
    <result column="inspectionNo" jdbcType="INTEGER" property="inspectionno" />
    <result column="inspectionDate" jdbcType="VARCHAR" property="inspectiondate" />
    <result column="inspectionResult" jdbcType="VARCHAR" property="inspectionresult" />
    <result column="isDelete" jdbcType="INTEGER" property="isdelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hospitalizationCheckNo, hospitalizationAdviceId, inspectionDoctorId, inspectionNo, 
    inspectionDate, inspectionResult, isDelete
  </sql>
  <select id="selectByExample" parameterType="com.web.entity.HospitalizationcheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospitalizationCheck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hospitalizationCheck
    where hospitalizationCheckNo = #{hospitalizationcheckno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hospitalizationCheck
    where hospitalizationCheckNo = #{hospitalizationcheckno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.web.entity.HospitalizationcheckExample">
    delete from hospitalizationCheck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.web.entity.Hospitalizationcheck">
    insert into hospitalizationCheck (hospitalizationCheckNo, hospitalizationAdviceId, 
      inspectionDoctorId, inspectionNo, inspectionDate, 
      inspectionResult, isDelete)
    values (#{hospitalizationcheckno,jdbcType=INTEGER}, #{hospitalizationadviceid,jdbcType=INTEGER}, 
      #{inspectiondoctorid,jdbcType=INTEGER}, #{inspectionno,jdbcType=INTEGER}, #{inspectiondate,jdbcType=VARCHAR}, 
      #{inspectionresult,jdbcType=VARCHAR}, #{isdelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.web.entity.Hospitalizationcheck">
    insert into hospitalizationCheck
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hospitalizationcheckno != null">
        hospitalizationCheckNo,
      </if>
      <if test="hospitalizationadviceid != null">
        hospitalizationAdviceId,
      </if>
      <if test="inspectiondoctorid != null">
        inspectionDoctorId,
      </if>
      <if test="inspectionno != null">
        inspectionNo,
      </if>
      <if test="inspectiondate != null">
        inspectionDate,
      </if>
      <if test="inspectionresult != null">
        inspectionResult,
      </if>
      <if test="isdelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hospitalizationcheckno != null">
        #{hospitalizationcheckno,jdbcType=INTEGER},
      </if>
      <if test="hospitalizationadviceid != null">
        #{hospitalizationadviceid,jdbcType=INTEGER},
      </if>
      <if test="inspectiondoctorid != null">
        #{inspectiondoctorid,jdbcType=INTEGER},
      </if>
      <if test="inspectionno != null">
        #{inspectionno,jdbcType=INTEGER},
      </if>
      <if test="inspectiondate != null">
        #{inspectiondate,jdbcType=VARCHAR},
      </if>
      <if test="inspectionresult != null">
        #{inspectionresult,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        #{isdelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.entity.HospitalizationcheckExample" resultType="java.lang.Long">
    select count(*) from hospitalizationCheck
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hospitalizationCheck
    <set>
      <if test="record.hospitalizationcheckno != null">
        hospitalizationCheckNo = #{record.hospitalizationcheckno,jdbcType=INTEGER},
      </if>
      <if test="record.hospitalizationadviceid != null">
        hospitalizationAdviceId = #{record.hospitalizationadviceid,jdbcType=INTEGER},
      </if>
      <if test="record.inspectiondoctorid != null">
        inspectionDoctorId = #{record.inspectiondoctorid,jdbcType=INTEGER},
      </if>
      <if test="record.inspectionno != null">
        inspectionNo = #{record.inspectionno,jdbcType=INTEGER},
      </if>
      <if test="record.inspectiondate != null">
        inspectionDate = #{record.inspectiondate,jdbcType=VARCHAR},
      </if>
      <if test="record.inspectionresult != null">
        inspectionResult = #{record.inspectionresult,jdbcType=VARCHAR},
      </if>
      <if test="record.isdelete != null">
        isDelete = #{record.isdelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hospitalizationCheck
    set hospitalizationCheckNo = #{record.hospitalizationcheckno,jdbcType=INTEGER},
      hospitalizationAdviceId = #{record.hospitalizationadviceid,jdbcType=INTEGER},
      inspectionDoctorId = #{record.inspectiondoctorid,jdbcType=INTEGER},
      inspectionNo = #{record.inspectionno,jdbcType=INTEGER},
      inspectionDate = #{record.inspectiondate,jdbcType=VARCHAR},
      inspectionResult = #{record.inspectionresult,jdbcType=VARCHAR},
      isDelete = #{record.isdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.entity.Hospitalizationcheck">
    update hospitalizationCheck
    <set>
      <if test="hospitalizationadviceid != null">
        hospitalizationAdviceId = #{hospitalizationadviceid,jdbcType=INTEGER},
      </if>
      <if test="inspectiondoctorid != null">
        inspectionDoctorId = #{inspectiondoctorid,jdbcType=INTEGER},
      </if>
      <if test="inspectionno != null">
        inspectionNo = #{inspectionno,jdbcType=INTEGER},
      </if>
      <if test="inspectiondate != null">
        inspectionDate = #{inspectiondate,jdbcType=VARCHAR},
      </if>
      <if test="inspectionresult != null">
        inspectionResult = #{inspectionresult,jdbcType=VARCHAR},
      </if>
      <if test="isdelete != null">
        isDelete = #{isdelete,jdbcType=INTEGER},
      </if>
    </set>
    where hospitalizationCheckNo = #{hospitalizationcheckno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.entity.Hospitalizationcheck">
    update hospitalizationCheck
    set hospitalizationAdviceId = #{hospitalizationadviceid,jdbcType=INTEGER},
      inspectionDoctorId = #{inspectiondoctorid,jdbcType=INTEGER},
      inspectionNo = #{inspectionno,jdbcType=INTEGER},
      inspectionDate = #{inspectiondate,jdbcType=VARCHAR},
      inspectionResult = #{inspectionresult,jdbcType=VARCHAR},
      isDelete = #{isdelete,jdbcType=INTEGER}
    where hospitalizationCheckNo = #{hospitalizationcheckno,jdbcType=INTEGER}
  </update>
</mapper>