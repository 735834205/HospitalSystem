<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.web.mapper.OutpatientCheckMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.web.entity.OutpatientCheck">
    <id column="outpatientMedicalRecordId" jdbcType="INTEGER" property="outpatientmedicalrecordid" />
    <result column="checkDoctorName" jdbcType="INTEGER" property="checkdoctorname" />
    <result column="checkTime" jdbcType="VARCHAR" property="checktime" />
    <result column="checkContext" jdbcType="VARCHAR" property="checkcontext" />
    <result column="checkAnalysis" jdbcType="VARCHAR" property="checkanalysis" />
    <result column="checkResult" jdbcType="VARCHAR" property="checkresult" />
    <result column="checkCharge" jdbcType="DOUBLE" property="checkcharge" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    outpatientMedicalRecordId, checkDoctorName, checkTime, checkContext, checkAnalysis, 
    checkResult, checkCharge
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.web.entity.OutpatientCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from outpatient_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from outpatient_check
    where outpatientMedicalRecordId = #{outpatientmedicalrecordid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from outpatient_check
    where outpatientMedicalRecordId = #{outpatientmedicalrecordid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.web.entity.OutpatientCheckExample">
    delete from outpatient_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.web.entity.OutpatientCheck">
    insert into outpatient_check (outpatientMedicalRecordId, checkDoctorName, 
      checkTime, checkContext, checkAnalysis, 
      checkResult, checkCharge)
    values (#{outpatientmedicalrecordid,jdbcType=INTEGER}, #{checkdoctorname,jdbcType=INTEGER}, 
      #{checktime,jdbcType=VARCHAR}, #{checkcontext,jdbcType=VARCHAR}, #{checkanalysis,jdbcType=VARCHAR}, 
      #{checkresult,jdbcType=VARCHAR}, #{checkcharge,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.web.entity.OutpatientCheck">
    insert into outpatient_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outpatientmedicalrecordid != null">
        outpatientMedicalRecordId,
      </if>
      <if test="checkdoctorname != null">
        checkDoctorName,
      </if>
      <if test="checktime != null">
        checkTime,
      </if>
      <if test="checkcontext != null">
        checkContext,
      </if>
      <if test="checkanalysis != null">
        checkAnalysis,
      </if>
      <if test="checkresult != null">
        checkResult,
      </if>
      <if test="checkcharge != null">
        checkCharge,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outpatientmedicalrecordid != null">
        #{outpatientmedicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="checkdoctorname != null">
        #{checkdoctorname,jdbcType=INTEGER},
      </if>
      <if test="checktime != null">
        #{checktime,jdbcType=VARCHAR},
      </if>
      <if test="checkcontext != null">
        #{checkcontext,jdbcType=VARCHAR},
      </if>
      <if test="checkanalysis != null">
        #{checkanalysis,jdbcType=VARCHAR},
      </if>
      <if test="checkresult != null">
        #{checkresult,jdbcType=VARCHAR},
      </if>
      <if test="checkcharge != null">
        #{checkcharge,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.web.entity.OutpatientCheckExample" resultType="java.lang.Long">
    select count(*) from outpatient_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update outpatient_check
    <set>
      <if test="record.outpatientmedicalrecordid != null">
        outpatientMedicalRecordId = #{record.outpatientmedicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.checkdoctorname != null">
        checkDoctorName = #{record.checkdoctorname,jdbcType=INTEGER},
      </if>
      <if test="record.checktime != null">
        checkTime = #{record.checktime,jdbcType=VARCHAR},
      </if>
      <if test="record.checkcontext != null">
        checkContext = #{record.checkcontext,jdbcType=VARCHAR},
      </if>
      <if test="record.checkanalysis != null">
        checkAnalysis = #{record.checkanalysis,jdbcType=VARCHAR},
      </if>
      <if test="record.checkresult != null">
        checkResult = #{record.checkresult,jdbcType=VARCHAR},
      </if>
      <if test="record.checkcharge != null">
        checkCharge = #{record.checkcharge,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update outpatient_check
    set outpatientMedicalRecordId = #{record.outpatientmedicalrecordid,jdbcType=INTEGER},
      checkDoctorName = #{record.checkdoctorname,jdbcType=INTEGER},
      checkTime = #{record.checktime,jdbcType=VARCHAR},
      checkContext = #{record.checkcontext,jdbcType=VARCHAR},
      checkAnalysis = #{record.checkanalysis,jdbcType=VARCHAR},
      checkResult = #{record.checkresult,jdbcType=VARCHAR},
      checkCharge = #{record.checkcharge,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.web.entity.OutpatientCheck">
    update outpatient_check
    <set>
      <if test="checkdoctorname != null">
        checkDoctorName = #{checkdoctorname,jdbcType=INTEGER},
      </if>
      <if test="checktime != null">
        checkTime = #{checktime,jdbcType=VARCHAR},
      </if>
      <if test="checkcontext != null">
        checkContext = #{checkcontext,jdbcType=VARCHAR},
      </if>
      <if test="checkanalysis != null">
        checkAnalysis = #{checkanalysis,jdbcType=VARCHAR},
      </if>
      <if test="checkresult != null">
        checkResult = #{checkresult,jdbcType=VARCHAR},
      </if>
      <if test="checkcharge != null">
        checkCharge = #{checkcharge,jdbcType=DOUBLE},
      </if>
    </set>
    where outpatientMedicalRecordId = #{outpatientmedicalrecordid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.web.entity.OutpatientCheck">
    update outpatient_check
    set checkDoctorName = #{checkdoctorname,jdbcType=INTEGER},
      checkTime = #{checktime,jdbcType=VARCHAR},
      checkContext = #{checkcontext,jdbcType=VARCHAR},
      checkAnalysis = #{checkanalysis,jdbcType=VARCHAR},
      checkResult = #{checkresult,jdbcType=VARCHAR},
      checkCharge = #{checkcharge,jdbcType=DOUBLE}
    where outpatientMedicalRecordId = #{outpatientmedicalrecordid,jdbcType=INTEGER}
  </update>
</mapper>