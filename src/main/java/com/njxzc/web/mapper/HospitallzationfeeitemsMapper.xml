<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.web.mapper.HospitallzationfeeitemsMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.web.entity.Hospitallzationfeeitems">
    <id column="projecdId" jdbcType="INTEGER" property="projecdid" />
    <result column="prescriptionid" jdbcType="INTEGER" property="prescriptionid" />
    <result column="correspondingId" jdbcType="INTEGER" property="correspondingid" />
    <result column="chargeType" jdbcType="INTEGER" property="chargetype" />
    <result column="chargeMoney" jdbcType="DOUBLE" property="chargemoney" />
    <result column="cashier" jdbcType="INTEGER" property="cashier" />
    <result column="checkoutStatus" jdbcType="INTEGER" property="checkoutstatus" />
    <result column="checkoutMoney" jdbcType="DOUBLE" property="checkoutmoney" />
    <result column="transferOrNot" jdbcType="INTEGER" property="transferornot" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    projecdId, prescriptionid, correspondingId, chargeType, chargeMoney, cashier, checkoutStatus, 
    checkoutMoney, transferOrNot
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.web.entity.HospitallzationfeeitemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hospitallzationfeeitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hospitallzationfeeitems
    where projecdId = #{projecdid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hospitallzationfeeitems
    where projecdId = #{projecdid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.web.entity.HospitallzationfeeitemsExample">
    delete from hospitallzationfeeitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.web.entity.Hospitallzationfeeitems">
    insert into hospitallzationfeeitems (projecdId, prescriptionid, correspondingId, 
      chargeType, chargeMoney, cashier, 
      checkoutStatus, checkoutMoney, transferOrNot
      )
    values (#{projecdid,jdbcType=INTEGER}, #{prescriptionid,jdbcType=INTEGER}, #{correspondingid,jdbcType=INTEGER}, 
      #{chargetype,jdbcType=INTEGER}, #{chargemoney,jdbcType=DOUBLE}, #{cashier,jdbcType=INTEGER}, 
      #{checkoutstatus,jdbcType=INTEGER}, #{checkoutmoney,jdbcType=DOUBLE}, #{transferornot,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.web.entity.Hospitallzationfeeitems">
    insert into hospitallzationfeeitems
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projecdid != null">
        projecdId,
      </if>
      <if test="prescriptionid != null">
        prescriptionid,
      </if>
      <if test="correspondingid != null">
        correspondingId,
      </if>
      <if test="chargetype != null">
        chargeType,
      </if>
      <if test="chargemoney != null">
        chargeMoney,
      </if>
      <if test="cashier != null">
        cashier,
      </if>
      <if test="checkoutstatus != null">
        checkoutStatus,
      </if>
      <if test="checkoutmoney != null">
        checkoutMoney,
      </if>
      <if test="transferornot != null">
        transferOrNot,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projecdid != null">
        #{projecdid,jdbcType=INTEGER},
      </if>
      <if test="prescriptionid != null">
        #{prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="correspondingid != null">
        #{correspondingid,jdbcType=INTEGER},
      </if>
      <if test="chargetype != null">
        #{chargetype,jdbcType=INTEGER},
      </if>
      <if test="chargemoney != null">
        #{chargemoney,jdbcType=DOUBLE},
      </if>
      <if test="cashier != null">
        #{cashier,jdbcType=INTEGER},
      </if>
      <if test="checkoutstatus != null">
        #{checkoutstatus,jdbcType=INTEGER},
      </if>
      <if test="checkoutmoney != null">
        #{checkoutmoney,jdbcType=DOUBLE},
      </if>
      <if test="transferornot != null">
        #{transferornot,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.web.entity.HospitallzationfeeitemsExample" resultType="java.lang.Long">
    select count(*) from hospitallzationfeeitems
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hospitallzationfeeitems
    <set>
      <if test="record.projecdid != null">
        projecdId = #{record.projecdid,jdbcType=INTEGER},
      </if>
      <if test="record.prescriptionid != null">
        prescriptionid = #{record.prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="record.correspondingid != null">
        correspondingId = #{record.correspondingid,jdbcType=INTEGER},
      </if>
      <if test="record.chargetype != null">
        chargeType = #{record.chargetype,jdbcType=INTEGER},
      </if>
      <if test="record.chargemoney != null">
        chargeMoney = #{record.chargemoney,jdbcType=DOUBLE},
      </if>
      <if test="record.cashier != null">
        cashier = #{record.cashier,jdbcType=INTEGER},
      </if>
      <if test="record.checkoutstatus != null">
        checkoutStatus = #{record.checkoutstatus,jdbcType=INTEGER},
      </if>
      <if test="record.checkoutmoney != null">
        checkoutMoney = #{record.checkoutmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.transferornot != null">
        transferOrNot = #{record.transferornot,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hospitallzationfeeitems
    set projecdId = #{record.projecdid,jdbcType=INTEGER},
      prescriptionid = #{record.prescriptionid,jdbcType=INTEGER},
      correspondingId = #{record.correspondingid,jdbcType=INTEGER},
      chargeType = #{record.chargetype,jdbcType=INTEGER},
      chargeMoney = #{record.chargemoney,jdbcType=DOUBLE},
      cashier = #{record.cashier,jdbcType=INTEGER},
      checkoutStatus = #{record.checkoutstatus,jdbcType=INTEGER},
      checkoutMoney = #{record.checkoutmoney,jdbcType=DOUBLE},
      transferOrNot = #{record.transferornot,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.web.entity.Hospitallzationfeeitems">
    update hospitallzationfeeitems
    <set>
      <if test="prescriptionid != null">
        prescriptionid = #{prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="correspondingid != null">
        correspondingId = #{correspondingid,jdbcType=INTEGER},
      </if>
      <if test="chargetype != null">
        chargeType = #{chargetype,jdbcType=INTEGER},
      </if>
      <if test="chargemoney != null">
        chargeMoney = #{chargemoney,jdbcType=DOUBLE},
      </if>
      <if test="cashier != null">
        cashier = #{cashier,jdbcType=INTEGER},
      </if>
      <if test="checkoutstatus != null">
        checkoutStatus = #{checkoutstatus,jdbcType=INTEGER},
      </if>
      <if test="checkoutmoney != null">
        checkoutMoney = #{checkoutmoney,jdbcType=DOUBLE},
      </if>
      <if test="transferornot != null">
        transferOrNot = #{transferornot,jdbcType=INTEGER},
      </if>
    </set>
    where projecdId = #{projecdid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.web.entity.Hospitallzationfeeitems">
    update hospitallzationfeeitems
    set prescriptionid = #{prescriptionid,jdbcType=INTEGER},
      correspondingId = #{correspondingid,jdbcType=INTEGER},
      chargeType = #{chargetype,jdbcType=INTEGER},
      chargeMoney = #{chargemoney,jdbcType=DOUBLE},
      cashier = #{cashier,jdbcType=INTEGER},
      checkoutStatus = #{checkoutstatus,jdbcType=INTEGER},
      checkoutMoney = #{checkoutmoney,jdbcType=DOUBLE},
      transferOrNot = #{transferornot,jdbcType=INTEGER}
    where projecdId = #{projecdid,jdbcType=INTEGER}
  </update>
</mapper>