<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.njxzc.web.mapper.InpatientMapper">
  <resultMap id="BaseResultMap" type="com.njxzc.web.entity.Inpatient">
    <id column="hospitalizationNumber" jdbcType="INTEGER" property="hospitalizationnumber" />
    <result column="patientId" jdbcType="INTEGER" property="patientid" />
    <result column="bedNumber" jdbcType="INTEGER" property="bednumber" />
    <result column="admissionDepartment" jdbcType="VARCHAR" property="admissiondepartment" />
    <result column="admissionTime" jdbcType="TIMESTAMP" property="admissiontime" />
    <result column="admissionSituation" jdbcType="VARCHAR" property="admissionsituation" />
    <result column="TransferSituation" jdbcType="INTEGER" property="transfersituation" />
    <result column="dischargedDepartment" jdbcType="VARCHAR" property="dischargeddepartment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hospitalizationNumber, patientId, bedNumber, admissionDepartment, admissionTime, 
    admissionSituation, TransferSituation, dischargedDepartment
  </sql>
  <select id="selectByExample" parameterType="com.njxzc.web.entity.InpatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from inpatient
    where hospitalizationNumber = #{hospitalizationnumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inpatient
    where hospitalizationNumber = #{hospitalizationnumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.njxzc.web.entity.InpatientExample">
    delete from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.njxzc.web.entity.Inpatient">
    insert into inpatient (hospitalizationNumber, patientId, 
      bedNumber, admissionDepartment, admissionTime, 
      admissionSituation, TransferSituation, 
      dischargedDepartment)
    values (#{hospitalizationnumber,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER}, 
      #{bednumber,jdbcType=INTEGER}, #{admissiondepartment,jdbcType=VARCHAR}, #{admissiontime,jdbcType=TIMESTAMP}, 
      #{admissionsituation,jdbcType=VARCHAR}, #{transfersituation,jdbcType=INTEGER}, 
      #{dischargeddepartment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.njxzc.web.entity.Inpatient">
    insert into inpatient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hospitalizationnumber != null">
        hospitalizationNumber,
      </if>
      <if test="patientid != null">
        patientId,
      </if>
      <if test="bednumber != null">
        bedNumber,
      </if>
      <if test="admissiondepartment != null">
        admissionDepartment,
      </if>
      <if test="admissiontime != null">
        admissionTime,
      </if>
      <if test="admissionsituation != null">
        admissionSituation,
      </if>
      <if test="transfersituation != null">
        TransferSituation,
      </if>
      <if test="dischargeddepartment != null">
        dischargedDepartment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hospitalizationnumber != null">
        #{hospitalizationnumber,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        #{patientid,jdbcType=INTEGER},
      </if>
      <if test="bednumber != null">
        #{bednumber,jdbcType=INTEGER},
      </if>
      <if test="admissiondepartment != null">
        #{admissiondepartment,jdbcType=VARCHAR},
      </if>
      <if test="admissiontime != null">
        #{admissiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="admissionsituation != null">
        #{admissionsituation,jdbcType=VARCHAR},
      </if>
      <if test="transfersituation != null">
        #{transfersituation,jdbcType=INTEGER},
      </if>
      <if test="dischargeddepartment != null">
        #{dischargeddepartment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.njxzc.web.entity.InpatientExample" resultType="java.lang.Long">
    select count(*) from inpatient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inpatient
    <set>
      <if test="record.hospitalizationnumber != null">
        hospitalizationNumber = #{record.hospitalizationnumber,jdbcType=INTEGER},
      </if>
      <if test="record.patientid != null">
        patientId = #{record.patientid,jdbcType=INTEGER},
      </if>
      <if test="record.bednumber != null">
        bedNumber = #{record.bednumber,jdbcType=INTEGER},
      </if>
      <if test="record.admissiondepartment != null">
        admissionDepartment = #{record.admissiondepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.admissiontime != null">
        admissionTime = #{record.admissiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.admissionsituation != null">
        admissionSituation = #{record.admissionsituation,jdbcType=VARCHAR},
      </if>
      <if test="record.transfersituation != null">
        TransferSituation = #{record.transfersituation,jdbcType=INTEGER},
      </if>
      <if test="record.dischargeddepartment != null">
        dischargedDepartment = #{record.dischargeddepartment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inpatient
    set hospitalizationNumber = #{record.hospitalizationnumber,jdbcType=INTEGER},
      patientId = #{record.patientid,jdbcType=INTEGER},
      bedNumber = #{record.bednumber,jdbcType=INTEGER},
      admissionDepartment = #{record.admissiondepartment,jdbcType=VARCHAR},
      admissionTime = #{record.admissiontime,jdbcType=TIMESTAMP},
      admissionSituation = #{record.admissionsituation,jdbcType=VARCHAR},
      TransferSituation = #{record.transfersituation,jdbcType=INTEGER},
      dischargedDepartment = #{record.dischargeddepartment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.njxzc.web.entity.Inpatient">
    update inpatient
    <set>
      <if test="patientid != null">
        patientId = #{patientid,jdbcType=INTEGER},
      </if>
      <if test="bednumber != null">
        bedNumber = #{bednumber,jdbcType=INTEGER},
      </if>
      <if test="admissiondepartment != null">
        admissionDepartment = #{admissiondepartment,jdbcType=VARCHAR},
      </if>
      <if test="admissiontime != null">
        admissionTime = #{admissiontime,jdbcType=TIMESTAMP},
      </if>
      <if test="admissionsituation != null">
        admissionSituation = #{admissionsituation,jdbcType=VARCHAR},
      </if>
      <if test="transfersituation != null">
        TransferSituation = #{transfersituation,jdbcType=INTEGER},
      </if>
      <if test="dischargeddepartment != null">
        dischargedDepartment = #{dischargeddepartment,jdbcType=VARCHAR},
      </if>
    </set>
    where hospitalizationNumber = #{hospitalizationnumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.njxzc.web.entity.Inpatient">
    update inpatient
    set patientId = #{patientid,jdbcType=INTEGER},
      bedNumber = #{bednumber,jdbcType=INTEGER},
      admissionDepartment = #{admissiondepartment,jdbcType=VARCHAR},
      admissionTime = #{admissiontime,jdbcType=TIMESTAMP},
      admissionSituation = #{admissionsituation,jdbcType=VARCHAR},
      TransferSituation = #{transfersituation,jdbcType=INTEGER},
      dischargedDepartment = #{dischargeddepartment,jdbcType=VARCHAR}
    where hospitalizationNumber = #{hospitalizationnumber,jdbcType=INTEGER}
  </update>
</mapper>